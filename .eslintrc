{
  // I want to use babel-eslint for parsing!
  "parser": "babel-eslint",
  "env": {
    // I write for browser
    "browser": true,
    // in CommonJS
    "node": true,
    // use ES6
    "es6": true
  },
  "ecmaProperties": {
    // enable JSX support
    "jsx": true
  },
  "plugins": [
    // enable react plugin
    "react"
  ],
  // To give you an idea how to override rule options
  "rules": {
    // Possible Errors
    "comma-dangle": 0,
    "no-console": 0,
    "no-debugger": 2,
    "no-dupe-keys": 2,
    "no-dupe-args": 2,
    "no-empty": 2,
    "no-extra-boolean-cast": 2,
    "no-extra-semi": 2,
    "no-invalid-regexp": 2,
    "no-irregular-whitespace": 2,
    "quote-props": [2, "consistent-as-needed", {"keywords": true}],
    "no-sparse-arrays": 2,
    "no-unreachable": 2,
    "use-isnan": 2,
    "valid-jsdoc": 2,
    "valid-typeof": 2,
    // Best Practices
    "consistent-return": 1,
    "curly": 2,
    "default-case": 2,
    "dot-notation": 2,
    "eqeqeq": 2,
    "no-alert": 2,
    "no-caller": 2,
    "no-else-return": 2,
    "no-eq-null": 2,
    "no-eval": 2,
    "no-extend-native": 2,
    "no-floating-decimal": 2,
    "no-implied-eval": 2,
    "no-iterator": 2,
    "no-labels": 2,
    "no-loop-func": 1,
    "no-lone-blocks": 2,
    "no-multi-spaces": 2,
    "no-native-reassign": 2,
    "no-new": 2,
    "no-new-func": 2,
    "no-new-wrappers": 2,
    "no-proto": 2,
    "no-redeclare": 2,
    "no-return-assign": 2,
    "no-script-url": 2,
    "no-self-compare": 2,
    "no-sequences": 2,
    "no-throw-literal": 2,
    "no-unused-expressions": 2,
    "no-void": 2,
    "radix": 2,
    "yoda": 0,
    // Strict Mode
    "strict": 0,
    // Variables
    "no-catch-shadow": 2,
    "no-delete-var": 2,
    "no-shadow": 2,
    "no-shadow-restricted-names": 2,
    "no-undef": 2,
    "no-unused-vars": [2, {"vars": "all", "args": "after-used"}],
    "no-use-before-define": 2,
    // Node
    "handle-callback-err": 2,
    "no-new-require": 2,
    "no-path-concat": 2,
    // Stylistic Issues
    "indent": 2, // 4 spaces
    "camelcase": 2,
    "comma-spacing": [2, {"before": false, "after": true}],
    "comma-style": [2, "last"],
    "eol-last": 2,
    "func-style": [2, "expression"],
    "max-nested-callbacks": [2, 3],
    "no-array-constructor": 2,
    "no-mixed-spaces-and-tabs": 2,
    "no-multiple-empty-lines": [1, {"max": 2}],
    "no-nested-ternary": 2,
    "no-new-object": 2,
    "semi-spacing": [2, {"before": false, "after": true}],
    "no-spaced-func": 2,
    "no-trailing-spaces": 2,
    "no-underscore-dangle": 2,
    "no-extra-parens": [2, "functions"],
    "quote-props": [1, "as-needed"],
    "quotes": [1, "single"],
    "semi": [2, "always"],
    "semi-spacing": [2, {"before": false, "after": true}],
    "space-before-function-paren": [1, {"anonymous": "never", "named": "never"}],
    "space-after-keywords": [1, "always"],
    "space-before-blocks": [1, "always"],
    "object-curly-spacing": [1, "never"],
    "array-bracket-spacing": [1, "never"],
    "computed-property-spacing": [1, "never"],
    "space-in-parens": [1, "never"],
    "key-spacing": [1, {"beforeColon": false, "afterColon": true}],
    "object-curly-spacing": [1, "never"],
    "space-infix-ops": 2,
    // complexity rules
    "max-depth": [2, 3],
    "max-statements": [1, 20],
    "complexity": [1, 3],
    "max-len": [2, 120],
    "max-params": [2, 3],
    // jsx rules
    "react/jsx-quotes": 1,
    "react/jsx-no-undef": 1,
    "react/jsx-uses-react": 1,
    "react/jsx-uses-vars": 1,
    "react/no-did-mount-set-state": 1,
    "react/no-did-update-set-state": 1,
    "react/no-multi-comp": 1,
    "react/react-in-jsx-scope": 1,
    "react/self-closing-comp": 1,
    "react/wrap-multilines": 1,
    // ES6
    "prefer-const": 2,
    "object-shorthand": [2, "always"],
    "no-var": 2
  }
}
